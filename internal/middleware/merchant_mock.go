// Code generated by MockGen. DO NOT EDIT.
// Source: merchant.go

// Package middleware is a generated GoMock package.
package middleware

import (
	model "github.com/ferruvich/curve-prepaid-card/internal/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMerchant is a mock of Merchant interface
type MockMerchant struct {
	ctrl     *gomock.Controller
	recorder *MockMerchantMockRecorder
}

// MockMerchantMockRecorder is the mock recorder for MockMerchant
type MockMerchantMockRecorder struct {
	mock *MockMerchant
}

// NewMockMerchant creates a new mock instance
func NewMockMerchant(ctrl *gomock.Controller) *MockMerchant {
	mock := &MockMerchant{ctrl: ctrl}
	mock.recorder = &MockMerchantMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMerchant) EXPECT() *MockMerchantMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockMerchant) Create() (*model.Merchant, error) {
	ret := m.ctrl.Call(m, "Create")
	ret0, _ := ret[0].(*model.Merchant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockMerchantMockRecorder) Create() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockMerchant)(nil).Create))
}
