// Code generated by MockGen. DO NOT EDIT.
// Source: card.go

// Package middleware is a generated GoMock package.
package middleware

import (
	model "github.com/ferruvich/curve-prepaid-card/internal/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCard is a mock of Card interface
type MockCard struct {
	ctrl     *gomock.Controller
	recorder *MockCardMockRecorder
}

// MockCardMockRecorder is the mock recorder for MockCard
type MockCardMockRecorder struct {
	mock *MockCard
}

// NewMockCard creates a new mock instance
func NewMockCard(ctrl *gomock.Controller) *MockCard {
	mock := &MockCard{ctrl: ctrl}
	mock.recorder = &MockCardMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCard) EXPECT() *MockCardMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockCard) Create(arg0 string) (*model.Card, error) {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*model.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockCardMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCard)(nil).Create), arg0)
}

// GetCard mocks base method
func (m *MockCard) GetCard(arg0 string) (*model.Card, error) {
	ret := m.ctrl.Call(m, "GetCard", arg0)
	ret0, _ := ret[0].(*model.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCard indicates an expected call of GetCard
func (mr *MockCardMockRecorder) GetCard(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCard", reflect.TypeOf((*MockCard)(nil).GetCard), arg0)
}

// Deposit mocks base method
func (m *MockCard) Deposit(arg0 string, arg1 float64) error {
	ret := m.ctrl.Call(m, "Deposit", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Deposit indicates an expected call of Deposit
func (mr *MockCardMockRecorder) Deposit(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deposit", reflect.TypeOf((*MockCard)(nil).Deposit), arg0, arg1)
}
