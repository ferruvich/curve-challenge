// Code generated by MockGen. DO NOT EDIT.
// Source: authorization.go

// Package middleware is a generated GoMock package.
package middleware

import (
	model "github.com/ferruvich/curve-prepaid-card/internal/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAuthorizationRequest is a mock of AuthorizationRequest interface
type MockAuthorizationRequest struct {
	ctrl     *gomock.Controller
	recorder *MockAuthorizationRequestMockRecorder
}

// MockAuthorizationRequestMockRecorder is the mock recorder for MockAuthorizationRequest
type MockAuthorizationRequestMockRecorder struct {
	mock *MockAuthorizationRequest
}

// NewMockAuthorizationRequest creates a new mock instance
func NewMockAuthorizationRequest(ctrl *gomock.Controller) *MockAuthorizationRequest {
	mock := &MockAuthorizationRequest{ctrl: ctrl}
	mock.recorder = &MockAuthorizationRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthorizationRequest) EXPECT() *MockAuthorizationRequestMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockAuthorizationRequest) Create(arg0, arg1 string, arg2 float64) (*model.AuthorizationRequest, error) {
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(*model.AuthorizationRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockAuthorizationRequestMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAuthorizationRequest)(nil).Create), arg0, arg1, arg2)
}

// Revert mocks base method
func (m *MockAuthorizationRequest) Revert(arg0 string, arg1 float64) error {
	ret := m.ctrl.Call(m, "Revert", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Revert indicates an expected call of Revert
func (mr *MockAuthorizationRequestMockRecorder) Revert(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Revert", reflect.TypeOf((*MockAuthorizationRequest)(nil).Revert), arg0, arg1)
}
